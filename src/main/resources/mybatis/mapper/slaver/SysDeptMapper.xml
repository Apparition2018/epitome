<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="springboot.mapper.slaver.SysDeptMapper">
  <resultMap id="BaseResultMap" type="springboot.domain.slaver.SysDept">
    <id column="dept_id" jdbcType="BIGINT" property="deptId" />
    <result column="parent_id" jdbcType="BIGINT" property="parentId" />
    <result column="ancestors" jdbcType="VARCHAR" property="ancestors" />
    <result column="dept_name" jdbcType="VARCHAR" property="deptName" />
    <result column="order_num" jdbcType="INTEGER" property="orderNum" />
    <result column="leader" jdbcType="VARCHAR" property="leader" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="status" jdbcType="CHAR" property="status" />
    <result column="del_flag" jdbcType="CHAR" property="delFlag" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sys_dept
    where dept_id = #{deptId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="springboot.domain.slaver.SysDept">
    insert into sys_dept (dept_id, parent_id, ancestors, 
      dept_name, order_num, leader, 
      phone, email, status, 
      del_flag, create_by, create_time, 
      update_by, update_time)
    values (#{deptId,jdbcType=BIGINT}, #{parentId,jdbcType=BIGINT}, #{ancestors,jdbcType=VARCHAR}, 
      #{deptName,jdbcType=VARCHAR}, #{orderNum,jdbcType=INTEGER}, #{leader,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{status,jdbcType=CHAR}, 
      #{delFlag,jdbcType=CHAR}, #{createBy,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateBy,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <update id="updateByPrimaryKey" parameterType="springboot.domain.slaver.SysDept">
    update sys_dept
    set parent_id = #{parentId,jdbcType=BIGINT},
      ancestors = #{ancestors,jdbcType=VARCHAR},
      dept_name = #{deptName,jdbcType=VARCHAR},
      order_num = #{orderNum,jdbcType=INTEGER},
      leader = #{leader,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      status = #{status,jdbcType=CHAR},
      del_flag = #{delFlag,jdbcType=CHAR},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where dept_id = #{deptId,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select dept_id, parent_id, ancestors, dept_name, order_num, leader, phone, email, 
    status, del_flag, create_by, create_time, update_by, update_time
    from sys_dept
    where dept_id = #{deptId,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select dept_id, parent_id, ancestors, dept_name, order_num, leader, phone, email, 
    status, del_flag, create_by, create_time, update_by, update_time
    from sys_dept
  </select>
    <resultMap id="SysDeptResult" type="SysDept">
        <id column="dept_id" property="deptId" />
        <result column="parent_id" property="parentId" />
        <result column="ancestors" property="ancestors" />
        <result column="dept_name" property="deptName" />
        <result column="order_num" property="orderNum" />
        <result column="leader" property="leader" />
        <result column="phone" property="phone" />
        <result column="email" property="email" />
        <result column="status" property="status" />
        <result column="del_flag" property="delFlag" />
        <result column="parent_name" property="parentName" />
        <result column="create_by" property="createBy" />
        <result column="create_time" property="createTime" />
        <result column="update_by" property="updateBy" />
        <result column="update_time" property="updateTime" />
    </resultMap>

    <sql id="selectDeptVo">
        select d.dept_id, d.parent_id, d.ancestors, d.dept_name, d.order_num, d.leader, d.phone, d.email, d.status, d.del_flag, d.create_by, d.create_time
        from sys_dept d
    </sql>

    <select id="list" parameterType="SysDept" resultMap="SysDeptResult">
        <include refid="selectDeptVo" />
        where d.del_flag = '0'
        <if test="deptId != null and deptId != 0">
            AND dept_id = #{deptId}
        </if>
        <if test="parentId != null and parentId != 0">
            AND parent_id = #{parentId}
        </if>
        <if test="deptName != null and deptName != ''">
            AND dept_name like concat('%', #{deptName}, '%')
        </if>
        <if test="status != null and status != ''">
            AND status = #{status}
        </if>
        order by d.parent_id, d.order_num
    </select>
</mapper>