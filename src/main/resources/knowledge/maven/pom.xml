<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <!-- POM Reference：https://maven.apache.org/pom.html -->

    <!-- modelVersion：4.0.0 是目前唯一支持的版本，并且是必须的 -->
    <modelVersion>4.0.0</modelVersion>

    <!-- 父模块 -->
    <parent>
        <groupId>xxx</groupId>
        <artifactId>xxx</artifactId>
        <version>xxx</version>
    </parent>
    <!-- Maven 坐标：https://maven.apache.org/pom.html#maven-coordinates -->
    <groupId>com.{公司/BU}.业务线.[子业务线]</groupId>
    <artifactId>产品线名-模块名</artifactId>
    <version>主版本号.次版本号.修订号</version>
    <!-- packaging：默认 jar
            https://maven.apache.org/pom.html#packaging -->
    <packaging>war</packaging>
    <name>项目名</name>
    <description>项目描述</description>
    <url>项目地址</url>

    <organization>
        <name>组织</name>
        <url>...</url>
    </organization>
    <licenses>
        <license>
            <name>许可证</name>
            <url>...</url>
        </license>
    </licenses>
    <developers>
        <developer>
            <name>开发人员列表</name>
        </developer>
    </developers>

    <!-- 多模块 -->
    <modules>
        <module>xxx</module>
    </modules>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.7</maven.compiler.source>
        <maven.compiler.target>1.7</maven.compiler.target>
    </properties>

    <dependencies>
        <dependency>
            <groupId>xxx</groupId>
            <artifactId>xxx</artifactId>
            <version>xxx</version>
            <type>xxx</type>
            <!-- 范围 -->
            <scope>test</scope>
            <!-- 设置依赖是否可以传递
                optional=true，依赖不会传递，之后依赖此项目的项目如果想要使用, 需要重新引入 -->
            <optional>true</optional>
            <!-- 排除依赖传递列表 -->
            <exclusions>
            </exclusions>
        </dependency>
    </dependencies>

    <!-- 依赖管理，让子模块继承 -->
    <dependencyManagement>
        <dependencies>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
        </plugins>
        <!-- Resources：指定项目资源位置
                https://maven.apache.org/pom.html#resources -->
        <resources>
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**/*.xlsx</include>
                    <include>**/*.xls</include>
                </includes>
            </resource>
        </resources>
    </build>

    <!-- 远程仓库，如果已在setting.xml中配置了远程仓库，这里则不需要配置 -->
    <repositories>
        <repository>
            <id>aliyunmaven</id>
            <url>https://maven.aliyun.com/repository/public</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>
    <!-- 远程插件仓库 -->
    <pluginRepositories>
        <pluginRepository>
            <id>aliyunmaven</id>
            <url>https://maven.aliyun.com/repository/public</url>
        </pluginRepository>
    </pluginRepositories>

    <!-- 指定 maven 发布构建的位置 -->
    <distributionManagement>
        <!-- 正式库 -->
        <repository>
            <id>xxx</id>
            <name>xxx</name>
            <url>xxx</url>
        </repository>
        <!-- 快照库 -->
        <snapshotRepository>
            <id>xxx</id>
            <name>xxx</name>
            <url>xxx</url>
        </snapshotRepository>
    </distributionManagement>
</project>
