# nginx安装教程及简单实践
# https://www.jb51.net/article/94483.htm

#运行用户
#user  nobody;

#启动进程,通常设置成和cpu的数量相等
worker_processes  1;

#全局错误日志
error_log  logs/error.log;
error_log  logs/error.log  notice;
error_log  logs/error.log  info;

#PID文件，记录当前启动的nginx的进程ID
pid        logs/nginx.pid;

#工作模式及连接数上限
events {
    #单个后台worker process进程的最大并发链接数
    worker_connections  1024;
}

#设定http服务器，利用它的反向代理功能提供负载均衡支持
http {
    #设定mime类型(邮件支持类型)，类型由mime.types文件定义
    include       mime.types;
    default_type  application/octet-stream;

    #设定日志
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                     '$status $body_bytes_sent "$http_referer" '
                     '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  logs/access.log  main;
    rewrite_log on;

    #sendfile 指令指定 nginx 是否调用 sendfile 函数（zero copy 方式）来输出文件，
    #对于普通应用，必须设为 on，如果用来进行下载等应用磁盘IO重负载应用，可设置为 off，以平衡磁盘与网络I/O处理速度，降低系统的uptime.
    sendfile        on;
    #tcp_nopush     on;

    #连接超时时间
    keepalive_timeout   120;
    tcp_nodelay         on;

    #gzip压缩开关
    #gzip  on;

    #设定实际的服务器列表
    upstream product_server {
        server 192.168.1.11:80  weight=5;
        server 192.168.1.12:80  weight=1;
    }

    upstream admin_server {
        server 192.168.1.14:80;
    }

    upstream finance_server {
        server 192.168.1.15:80;
    }

    #HTTP服务器
    server {
        #监听80端口，用于HTTP协议
        listen       80;
        #监听443端口，用于HTTPS协议
        #listen    443 ssl;

        #ssl证书文件位置(常见证书文件格式为：crt/pem)
        #ssl_certificate   cert.pem;
        #ssl证书key位置
        #ssl_certificate_key cert.key;
        
        #ssl配置参数（选择性配置）
        #ssl_session_cache  shared:SSL:1m;
        #ssl_session_timeout 5m;
        #数字签名，此处使用MD5
        #ssl_ciphers HIGH:!aNULL:!MD5;
        #ssl_prefer_server_ciphers on;

        #定义使用www.xx.com访问
        server_name  www.helloworld.com;

        #编码格式
        #charset koi8-r;

        #设定日志格式
        access_log  logs/host.access.log  main;

        #反向代理的路径（和upstream绑定），location 后面设置映射的路径
        location / {
            #定义服务器的默认网站根目录位置
            root    data;
            #定义首页索引文件的名称
            index   index.html
            proxy_pass http://product_server;

            #proxy_redirect off;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            #后端的Web服务器可以通过X-Forwarded-For获取用户真实IP
            proxy_set_header X-Forwarded-For $remote_addr;
            #nginx跟后端服务器连接超时时间(代理连接超时)
            proxy_connect_timeout 90;
            #后端服务器数据回传时间(代理发送超时)
            proxy_send_timeout 90;
            #连接成功后，后端服务器响应时间(代理接收超时)
            proxy_read_timeout 90;
            #设置代理服务器(nginx)保存用户头信息的缓冲区大小
            proxy_buffer_size 4k;
            #proxy_buffers缓冲区，网页平均在32k以下的话，这样设置
            proxy_buffers 4 32k;
            #高负荷下缓冲大小(proxy_buffers*2)
            proxy_busy_buffers_size 64k;
            #设定缓存文件夹大小，大于这个值，将从upstream服务器传
            proxy_temp_file_write_size 64k;

            #允许客户端请求的最大单文件字节数
            client_max_body_size 10m;
            #缓冲区代理缓冲用户端请求的最大字节数
            client_body_buffer_size 128k;
        }

        location /product/{
            proxy_pass http://product_server;
        }
    
        location /admin/ {
            proxy_pass http://admin_server;
        }
        
        location /finance/ {
            proxy_pass http://finance_server;
        }

        #设定查看Nginx状态的地址
        location /NginxStatus {
            stub_status         on;
            access_log          on;
            auth_basic          "NginxStatus";
            auth_basic_user_file    conf/htpasswd;
        }

        #禁止访问 .htxxx 文件
        location ~ /\.ht {
           deny  all;
        }

        #错误处理页面
        error_page  404              /404.html;
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }

}