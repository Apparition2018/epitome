廖雪峰Git教程：	https://www.liaoxuefeng.com/wiki/896043488029600
Git book：		https://git-scm.com/book/zh/v2
.gitignore：	https://www.jianshu.com/p/74bd0ceb6182

q           退出log
Search      Alt + F3
Paste       Shift + Ins
********** 初次运行Git前的配置 **********

-- 用户信息
git config --global user.name "Apparition2018"
git config --global user.email "88850180@163.com"

-- 文本编辑器
git config --global core.editor="D:\Microsoft VS Code\Code.exe"

-- 查看配置信息
git config --list



********** 创建版本库 **********

-- 创建空目录
mkdir <dir>

-- 改变目录
cd <dir>

-- 显示当前目录
pwd

-- 创建一个空的Git仓库或重新初始化一个现有仓库
git init

-- 显示目标列表；显示所有档案及目录
ls -a

-- 将文件内容添加到索引(将修改添加到暂存区)
git add <file>

-- 将更改记录(提交)到存储库；说明；automatically stage files that have been modified and deleted
git commit -m <msg> -a



********** 查看 **********

-- 显示工作目录和暂存区的状态
git status

-- 显示提交和工作树等之间的区别
git diff

-- 显示工作区和版本库之间的区别
git diff HEAD -- <path>...

-- 连接文件或标准输入并打印
cat <file>

-- 显示各种类型的对象
git show <object>



********** 版本回退 **********

-- 显示提交日志信息; 按指定格式显示日志信息; 查看分支合并图
git log --pretty=oneline --graph

-- 显示管理日志信息
git reflog

-- 将当前HEAD复位到指定状态; 重设(reset) 索引和工作目录; 指向HEAD之前最近的一次提交
git reset --hard HEAD^/commit id



********** 撤销修改 **********

-- 恢复工作树文件
git checkout -- <file>

-- 将当前HEAD复位到指定状态; 把暂存区的修改撤销掉（unstage），重新放回工作区
git reset HEAD <file>



********** 删除文件 **********

-- 删除文件或目录
rm <file>

-- 从工作区和索引中删除文件
git rm <file>



********** 添加远程库 **********

-- 创建SSH Key
ssh-keygen -t rsa -C "88850180@163.com"

-- 添加一个新的远程仓库
git remote add <remote> <url>

-- 管理一组跟踪的存储库; 列出已经存在的远程分支的详细信息
git remote -v

-- 将本地分支的更新，推送到远程主机；指定一个默认主机，这样后面就可以不加任何参数使用git push
git push -u <remote> <branch>

-- 删除remote
git remote remove <remote>


********** 从远程库克隆 **********

-- 将存储库克隆到新目录中
git clone <url>



********** 创建与合并分支 **********

-- 查看分支
git branch

-- 创建分支
git branch <branch>

-- 删除/强制删除分支
git branch -d/-D <branch>

-- 切换分支
git checkout <branch>

-- 创建并切换分支
git checkout -b <new_branch>

-- 将两个或两个以上的开发历史加入(合并)一起
git merge <branch>



********** 分支管理策略 **********

-- 合并分支，禁用Fast forward（禁用后能看出来曾经做过合并），会生成一个新的commit（所以需要加上-m）
git merge --no-ff -m <msg> <branch>



********** Bug分支 **********

-- 将更改储藏在脏工作目录中
git stash

-- 列出/显示/恢复/删除/恢复并删除储藏的工作
git stash list/show/apply/drop/pop



********** 多人协作 **********

-- 根据远程分支创建分支
git checkout -b <branch> <remote>/<branch>

-- 从另一个存储库或本地分支获取并集成(整合)； 
git pull

-- 关联远程和本地分支
git branch --set-upstream-to=<remote>/<branch> <branch> 



********** Rebase **********

-- 在另一个分支基础之上重新应用，用于把一个分支的修改合并到当前分支
git rebase



********** 创建标签 **********

-- 查看标签
git tag

-- 创建标签; 在commit id 打标签; 说明的
git tag -a <tag> <commit> -m <ms>



********** 操作标签 **********

-- 删除标签
git tag -d <tag>

-- 推送某个标签到远程
git push <remote> <tag>

-- 一次性推送全部尚未推送到远程的本地标签
git push <remote> --tags

-- 删除远程标签
git push origin :refs/tags/<tag>



********** 忽略特殊文件 **********
https://github.com/github/gitignore


-- 强制添加文件
git add -f <file>

-- 查看因为哪条规则忽略
git check-ignore -v <file>



********** 配置别名 **********

-- 配置别名
git config --global alias.<alias> XXX